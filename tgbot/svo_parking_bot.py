import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, MessageHandler, CommandHandler, ContextTypes, filters
from tgbot.config import BOT_TOKEN
from Constants import *

# –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_markup = ReplyKeyboardMarkup(main_keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∞—Ä–∫–æ–≤–∫–µ. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=reply_markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É.\n–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {PHONE_NUMBER}"
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text

    # –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    if user_message in faq_answers:
        await update.message.reply_text(faq_answers[user_message])
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–º–µ–Ω—é
    if user_message in submenus:
        reply_markup = ReplyKeyboardMarkup(submenus[user_message], resize_keyboard=True)
        await update.message.reply_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: {user_message}", reply_markup=reply_markup)
        return

    # –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–º–µ–Ω—é
    if user_message == "üöÄ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω":
        await update.message.reply_text(f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {BOOKING_URL}")
        return
    if user_message == "üí∞ –û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω":
        await update.message.reply_text(f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã: {PAYMENT_URL}")
        return
    if user_message == "üîç –ü–æ–∏—Å–∫ –∞–≤—Ç–æ":
        await update.message.reply_text(f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {FIND_CAR_URL}")
        return
    if user_message == "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—É":
        await update.message.reply_text(f"–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É –ø–æ –Ω–æ–º–µ—Ä—É: {PHONE_NUMBER}")
        return
    if user_message == "‚úâÔ∏è –û–Ω–ª–∞–π–Ω-—á–∞—Ç":
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ CRM –∏–ª–∏ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏)
        await update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –æ–Ω–ª–∞–π–Ω-—á–∞—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.")
        return
    if user_message == "‚úâÔ∏è –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É":
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∞–ª–æ–±—ã –≤ CRM –∏–ª–∏ –æ—Ç–¥–µ–ª –∫–∞—á–µ—Å—Ç–≤–∞
        await update.message.reply_text("–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –æ—Ç–¥–µ–ª –∫–∞—á–µ—Å—Ç–≤–∞.")
        return
    if user_message == "üí∞ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç":
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤
        await update.message.reply_text("–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        return
    if user_message == "‚ÑπÔ∏è –£—Å–ª–æ–≤–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è":
        await update.message.reply_text(f"–£—Å–ª–æ–≤–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ: {BOOKING_URL}")
        return
    if user_message == "üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã":
        await update.message.reply_text(f"–û–ø–ª–∞—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–∞ —á–µ—Ä–µ–∑ —Å–∞–π—Ç: {PAYMENT_URL}")
        return

    # –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if user_message == "üîô –ù–∞–∑–∞–¥":
        reply_markup = ReplyKeyboardMarkup(main_keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=reply_markup)
        return

    await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()


if __name__ == '__main__':
    main()
