import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, MessageHandler, CommandHandler, ContextTypes, filters
from tgbot.config import BOT_TOKEN
from Constants import PHONE_NUMBER

# –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# FAQ: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
faq_answers = {
    "üÖøÔ∏è —Ç–∞—Ä–∏—Ñ—ã –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å": "–í–æ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:\n‚Äî –¢–µ—Ä–º–∏–Ω–∞–ª B: 800 ‚ÇΩ/—á–∞—Å, 1800 ‚ÇΩ/—Å—É—Ç–∫–∏\n‚Äî P18: 1000 ‚ÇΩ/—Å—É—Ç–∫–∏\n‚Äî P12: 400 ‚ÇΩ/—Å—É—Ç–∫–∏",
    "üìÖ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ": "–ß—Ç–æ–±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∫–æ–≤–∫—É, —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—ã –∏ –ø–ª–æ—â–∞–¥–∫—É. –Ø –ø—Ä–∏—à–ª—é —Å—Å—ã–ª–∫—É.",
    "üí≥ –æ–ø–ª–∞—Ç–∞": "–û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –Ω–∞ –º–µ—Å—Ç–µ. –•–æ—Ç–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É?",
    "üéü –ª—å–≥–æ—Ç—ã": "–£—Ç–æ—á–Ω–∏—Ç–µ –≤–∞—à—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–º–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã–µ, –õ–û–í–ó, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏) ‚Äî —è –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å.",
    "üîç –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ / –ø–æ–º–æ—â—å": "–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∫–æ–≤–∫—É –∏ –≥–æ—Å–Ω–æ–º–µ—Ä ‚Äî —è –ø–µ—Ä–µ–¥–∞–º –∑–∞–ø—Ä–æ—Å –≤ —Ç–µ—Ö—Å–ª—É–∂–±—É. üîß",
    "üì© –∂–∞–ª–æ–±—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç": "–û–ø–∏—à–∏—Ç–µ —Å—É—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏—è. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ. –Ø –ø–µ—Ä–µ–¥–∞–º –≤ –æ—Ç–¥–µ–ª –∫–∞—á–µ—Å—Ç–≤–∞.",
    "üó∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ö–µ–º–∞": "–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª, –∏ —è –ø—Ä–∏—à–ª—é —Å—Ö–µ–º—É.",
    "üöó –≤—ã–±–æ—Ä –ø–∞—Ä–∫–æ–≤–∫–∏": "–£—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—Ç–æ—è–Ω–∫–∏ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è. –Ø –ø–æ–¥–±–µ—Ä—É –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç.",
    "üë®‚Äçüíº —Å–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º": f"–ó–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä—É. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å: {PHONE_NUMBER}",
    "—Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ø–∞—Ä–∫–æ–≤–∫–∞ –Ω–æ—á—å—é": "–î–∞, –≤—Å–µ –ø–∞—Ä–∫–æ–≤–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ."
}

# –°—Ü–µ–Ω–∞—Ä–∏–∏, —Ç—Ä–µ–±—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ —Ñ–∞–π–ª—É –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
requires_operator = [
    "–∂–∞–ª–æ–±–∞", "–≤–æ–∑–≤—Ä–∞—Ç", "–æ—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã", "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", "–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–æ–ø–µ—Ä–∞—Ç–æ—Ä", "–Ω–µ –Ω–∞—à—ë–ª –º–∞—à–∏–Ω—É",
    "–ø—Ä–æ–±–ª–µ–º–∞", "–Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è", "—Å–µ–ª –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä"
]


# TODO: –ó–∞–≥–ª—É—à–∫–∏ –ø–æ–¥ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞ "–ú–∞—Ç—Ä–∏—Ü–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π_MVP"
def send_to_crm(user_id, message_text):
    logger.info(f"[CRM] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç {user_id}: {message_text}")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM


def forward_to_support(user_id, message_text):
    logger.info(f"[–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞] –ó–∞—è–≤–∫–∞ –æ—Ç {user_id}: {message_text}")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ç–µ—Ö—Å–ª—É–∂–±–æ–π


def forward_to_operator(user_id, message_text):
    logger.info(f"[–û–ø–µ—Ä–∞—Ç–æ—Ä] –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {message_text}")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ —á–∞—Ç —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ CRM
    send_to_crm(user_id, message_text)


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üÖøÔ∏è –¢–∞—Ä–∏—Ñ—ã –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å", "üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"],
        ["üí≥ –û–ø–ª–∞—Ç–∞", "üéü –õ—å–≥–æ—Ç—ã"],
        ["üîç –ù–∞–π—Ç–∏ –∞–≤—Ç–æ / –ø–æ–º–æ—â—å", "üì© –ñ–∞–ª–æ–±—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç"],
        ["üó∫ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ö–µ–º–∞", "üöó –í—ã–±–æ—Ä –ø–∞—Ä–∫–æ–≤–∫–∏"],
        ["üë®‚Äçüíº –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∞—Ä–∫–æ–≤–∫–µ. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=reply_markup
    )


# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É.\n–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {PHONE_NUMBER}"
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text.lower()
    user_id = update.message.from_user.id

    # –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞ –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    for question, answer in faq_answers.items():
        if question.lower() in user_message:
            await update.message.reply_text(answer)
            return

    # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    if any(keyword in user_message for keyword in requires_operator):
        forward_to_operator(user_id, user_message)
        await update.message.reply_text(
            "–í–∞—à –∑–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏."
        )
        return

    # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
    await update.message.reply_text(
        f"–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ: {PHONE_NUMBER}"
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()


if __name__ == '__main__':
    main()
  